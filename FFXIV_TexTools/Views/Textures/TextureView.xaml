<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:local="clr-namespace:FFXIV_TexTools.Views"
    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
    xmlns:controls="clr-namespace:FFXIV_TexTools.Controls" 
    xmlns:resx="clr-namespace:FFXIV_TexTools.Resources"
    resx:Localization.Enabled="True"    
    x:Class="FFXIV_TexTools.Views.TextureView"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <SolidColorBrush x:Key="DarkSquareColor" Color="#CC000000" />
        <SolidColorBrush x:Key="LightSquareColor" Color="#BF000000" />
        <Style x:Key="{x:Type xctk:Zoombox}" TargetType="{x:Type xctk:Zoombox}">
            <Style.Triggers>
                <Trigger Property="AreDragModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </Trigger>
                <Trigger Property="AreZoomModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <Trigger Property="AreZoomToSelectionModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Cross" />
                </Trigger>
                <Trigger Property="AreRelativeZoomModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <!-- The IsDraggingContent and IsSelectingRegion triggers should 
           always be last. -->
                <Trigger Property="IsDraggingContent" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </Trigger>
                <Trigger Property="IsSelectingRegion" Value="True">
                    <Setter Property="Cursor" Value="Cross" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" VerticalAlignment="Center" Margin="0, 5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <Button x:Name="ItemInfoButton" Margin="5,0" Grid.Column="0" IsEnabled="false">
                    <iconPacks:PackIconFontAwesome Kind="InfoSolid" Height="12"/>
            </Button>

            <ComboBox Grid.Column="1" x:Name="RaceComboBox" Margin="5,0" mah:TextBoxHelper.UseFloatingWatermark="True" mah:TextBoxHelper.Watermark="{Binding RaceWatermark, FallbackValue='Race'}" 
                      ItemsSource="{Binding Races}" DisplayMemberPath="Key" SelectedValuePath="Value" IsEnabled="{Binding RaceComboboxEnabled}"/>
            <ComboBox Grid.Column="2" x:Name="MaterialComboBox"  Margin="5,0" mah:TextBoxHelper.UseFloatingWatermark="True" mah:TextBoxHelper.Watermark="{Binding MaterialWatermark, FallbackValue='Material'}" 
                      ItemsSource="{Binding Materials}" DisplayMemberPath="Key" SelectedValuePath="Value" IsEnabled="{Binding MaterialComboBoxEnabled}" />
            <ComboBox Grid.Column="3"  x:Name="MapComboBox"  Margin="5,0" mah:TextBoxHelper.UseFloatingWatermark="True" mah:TextBoxHelper.Watermark="{Binding TextureMapWatermark, FallbackValue='Texture Map'}" 
                      ItemsSource="{Binding Maps}" DisplayMemberPath="Key" SelectedValuePath="Value" IsEnabled="{Binding MapComboBoxEnabled}"/>
        </Grid>

        <controls:ColorsetEditorControl x:Name="ColorsetEditor" Grid.Row="1" Margin="5,0" Visibility="Collapsed"></controls:ColorsetEditorControl>
        <Border x:Name="StandardTextureDisplay" Grid.Row="1" Margin="5, 0" Visibility="Visible">
            <Border.Background>
                <DrawingBrush Viewport="0,0,20,20" ViewportUnits="Absolute" Stretch="None" TileMode="Tile">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing Brush="{DynamicResource DarkSquareColor}">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="0,0,10,10"/>
                                        <RectangleGeometry Rect="10,10,10,10"/>
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                            <GeometryDrawing Brush="{DynamicResource LightSquareColor}">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="10,0,10,10"/>
                                        <RectangleGeometry Rect="0,10,10,10"/>
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Border.Background>
            <Grid>
                <xctk:Zoombox x:Name="ImageZoombox" DragModifiers="0" ZoomModifiers="0" KeepContentInBounds="True" MinScale="0.05" MaxScale="20" IsAnimated="False" ViewStackMode="Disabled" PanDistance="2" >
                    <Viewbox>
                        <Image Source="{Binding ImageDisplay}" Effect="{Binding ImageEffect}" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                    </Viewbox>
                </xctk:Zoombox>
                <StackPanel Margin="0" Background="#3FFFFFFF" Height="60" VerticalAlignment="Top" HorizontalAlignment="Right" Width="151">
                    <Grid Margin="0" Height="33" VerticalAlignment="Top" HorizontalAlignment="Right" Width="151" IsEnabled="{Binding ChannelsEnabled, FallbackValue=true}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <CheckBox x:Name="RedCheckBox" Content="R" HorizontalAlignment="Center" Margin="-2,0,0,0" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" IsChecked="{Binding RedChecked, FallbackValue=true}"/>
                        <CheckBox x:Name="GreenCheckBox" Content="G" Grid.Column="1" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding GreenChecked, FallbackValue=true}"/>
                        <CheckBox x:Name="BlueCheckBox" Content="B" Grid.Column="2" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding BlueChecked, FallbackValue=true}"/>
                        <CheckBox x:Name="AlphaCheckBox" Content="A" Grid.Column="3" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding AlphaChecked}"/>
                    </Grid>

                    <CheckBox x:Name="HiResCheckBox" Content="HD Texture" Margin="2,0,0,0" IsChecked="{Binding HiResChecked}" IsEnabled="{Binding HiResEnabled, FallbackValue=false}"/>
                </StackPanel>
                
                <Label x:Name="TexTypeLabel" Content="{Binding TextureFormat}" Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold"/>
                <Label x:Name="MipMapLabel" Content="{Binding MipMapInfo}" Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" Margin="0,26,0,0"/>
                <Label x:Name="SharedMaterialLabel"  Background="#66FFFFFF" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="Collapsed" FontWeight="Bold" Margin="0,5,0,0"/>
                
                <Label x:Name="TexDimensionLabel" Content="{Binding TextureDimensions}" Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="Bold"/>
                <Label x:Name="SharedVariantLabel"  Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Bottom"  FontWeight="Bold" Margin="0,0,0,26"/>
                <Label x:Name="SharedTextureLabel"  Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Bottom"  FontWeight="Bold" Margin="0,0,0,52" />
            </Grid>
        </Border>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="48"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Row="2" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="5" IsReadOnly="true" mah:TextBoxHelper.Watermark="Tex Path" Text="{Binding PathString}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>

            <Button Margin="5" Grid.Column="4" VerticalAlignment="Center" Command="{Binding OpenFileDetails}">
                <iconPacks:PackIconFontAwesome Kind="SearchSolid"/>
            </Button>
        </Grid>


        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition Width="48"/>
            </Grid.ColumnDefinitions>

            <Grid IsEnabled="{Binding ExportEnabled, FallbackValue=false}" Margin="5">
                <Button x:Name="ExportTextureButton" Grid.Column="0" Click="ExportTextureButton_Click" Padding="0, 0, 32, 0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Source={x:Static resx:UIStrings.Export}}"/>
                        <TextBlock x:Name="ExportFormatLabel" Text="{Binding ExportTexDisplay}" Margin="5, 0, 0, 0"/>
                    </StackPanel>
                </Button>
                <Button Width="32" HorizontalAlignment="Right" BorderThickness="3" BorderBrush="Transparent" Click="ExportFormatDropdown_Click">
                    <iconPacks:PackIconFontAwesome Kind="CaretDownSolid" Height="4"/>
                </Button>
                <Line Y1="0" Y2="1" StrokeThickness="1" Stroke="Black" Stretch="Fill" Margin="0, 6, 32, 6" HorizontalAlignment="Right" Opacity="0.25"/>

                <Grid.ContextMenu>
                    <ContextMenu x:Name="ExportContextMenu">
                        <MenuItem Header="DDS" IsCheckable="True" IsChecked="{Binding ExportTextureAsDDS}"/>
                        <MenuItem Header="BMP" IsCheckable="True" IsChecked="{Binding ExportTextureAsBMP}"/>
                        <MenuItem Header="PNG" IsCheckable="True" IsChecked="{Binding ExportTextureAsPNG}"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                
            </Grid>

            <Grid IsEnabled="{Binding ImportEnabled, FallbackValue=false}" Grid.Column="1" Margin="5">
                <Button x:Name="ImportTextureButton" Click="ImportTextureButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Source={x:Static resx:UIStrings.Import}}"/>
                        <TextBlock x:Name="ImportFormatLabel" Text="{Binding ImportTexDisplay}" Margin="5, 0, 0, 0"/>
                    </StackPanel>
                </Button>

                <Button Width="32" HorizontalAlignment="Right" BorderThickness="3" BorderBrush="Transparent" Click="ImportTextureFromButton_Click" Content="..."/>
                <Line Y1="0" Y2="1" StrokeThickness="1" Stroke="Black" Stretch="Fill" Margin="0, 6, 32, 6" HorizontalAlignment="Right" Opacity="0.25"/>

                <Grid.ContextMenu>
                    <ContextMenu x:Name="ImportContextMenu"/>
                </Grid.ContextMenu>
            </Grid>

            
            <Button x:Name="ModStatusToggleButton" Grid.Column="2" Content="{Binding ModToggleText, FallbackValue=Enable/Disable}" Margin="5" Command="{Binding ModStatusToggleButton}"  IsEnabled="{Binding ModStatusToggleEnabled, FallbackValue=false}"/>
            <Button x:Name="MoreTextureOptionsButton" Grid.Column="3" Content="{Binding Source={x:Static resx:UIStrings.More_Options}}" Margin="5" Click="MoreTextureOptionsButton_Click" IsEnabled="{Binding MoreOptionsEnabled, FallbackValue=false}"/>

            <Button Margin="5" Grid.Column="4" VerticalAlignment="Center" Command="{Binding OpenFolder}">
                <iconPacks:PackIconFontAwesome Kind="FolderOpenRegular"/>
            </Button>
        </Grid>

        <controls:FeedbackControl x:Name="Feedback" Grid.RowSpan="3"/>


        <mah:FlyoutsControl Grid.Row="2" Grid.RowSpan="2" VerticalAlignment="Bottom">
            <mah:Flyout x:Name="BottomFlyout" Position="Bottom"/>
        </mah:FlyoutsControl>

    </Grid>
</UserControl>
